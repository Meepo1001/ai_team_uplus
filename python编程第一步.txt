读书笔记：
Python3 编程第一步
end关键字：
a, b = 0, 1
while b<100:
	print(b, end=‘,’) 
	a, b = b, a+b
>>1,1,2,3,5,8,13,21…

条件控制
if condition_1:
	statement_block_1
elif condition_2:
	statement_block_2
else:
	statement_block_3
ex:
if age < 0:
	print(“Not Valid”)
elif age == 1:
	print(“yes”)
else:
	print(“no”)



循环语句：
while循环
无限循环（while var == 1）
while语句使用else
while（flag）：print（）

for语句
for variable in sequence:
	statements
else:
	statements

For site in sites: 	if site == “runoob”:
		print(“cainiaojiaosheng”)
		break
	print(“loop”+site)
Else:
	print(“no loop”)
print()

Break 可以跳出for或while和循环体
continue 可以跳过for或while的当前循环块

range():
range(5): 0,1,2,3,4,5
range(0,10,3): 0 3 6 9
使用range当索引：
a = [‘google’,’baidu’,’runoob’]
for I in range(len(a))
	print(i,a[i])
>>0 google
>>1 Baidu
>>2 runoob
list(range(5)): >>[0,1,2,3,4]

迭代器与生成器
迭代器：iter() next()
list=[1,2,3,4]
it=iter(list)
print(next(it))
>>1
print(next(it))
>>2

生成器：在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行。
调用一个生成器函数，返回的是一个迭代器对象。

Import sys

Def fib(n): #生成器函数
	a, b, counter = 0,1,0
	while True:
		if (counter > n): 			return
		yield a
		a, b = b, a+b
		counter +=1
F = fib(10)

While True:
	try:
		print (next(f), end=“ ”)
	except StopIteration:
		sys.exit()

>> 0 1 1 2 3 5 8 …



